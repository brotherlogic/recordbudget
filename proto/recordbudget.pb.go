// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: recordbudget.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BudgetType int32

const (
	BudgetType_YEARLY    BudgetType = 0
	BudgetType_QUARTERLY BudgetType = 2
	BudgetType_INFINITE  BudgetType = 3
)

// Enum value maps for BudgetType.
var (
	BudgetType_name = map[int32]string{
		0: "YEARLY",
		2: "QUARTERLY",
		3: "INFINITE",
	}
	BudgetType_value = map[string]int32{
		"YEARLY":    0,
		"QUARTERLY": 2,
		"INFINITE":  3,
	}
)

func (x BudgetType) Enum() *BudgetType {
	p := new(BudgetType)
	*p = x
	return p
}

func (x BudgetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BudgetType) Descriptor() protoreflect.EnumDescriptor {
	return file_recordbudget_proto_enumTypes[0].Descriptor()
}

func (BudgetType) Type() protoreflect.EnumType {
	return &file_recordbudget_proto_enumTypes[0]
}

func (x BudgetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BudgetType.Descriptor instead.
func (BudgetType) EnumDescriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{0}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastRecordcollectionPull int64              `protobuf:"varint,1,opt,name=last_recordcollection_pull,json=lastRecordcollectionPull,proto3" json:"last_recordcollection_pull,omitempty"`
	Purchases                []*BoughtRecord    `protobuf:"bytes,2,rep,name=purchases,proto3" json:"purchases,omitempty"`
	PrePurchases             []*PreBoughtRecord `protobuf:"bytes,3,rep,name=pre_purchases,json=prePurchases,proto3" json:"pre_purchases,omitempty"`
	Solds                    []*SoldRecord      `protobuf:"bytes,4,rep,name=solds,proto3" json:"solds,omitempty"`
	LastOrderPull            int32              `protobuf:"varint,6,opt,name=last_order_pull,json=lastOrderPull,proto3" json:"last_order_pull,omitempty"`
	RotateOrderPull          int32              `protobuf:"varint,10,opt,name=rotate_order_pull,json=rotateOrderPull,proto3" json:"rotate_order_pull,omitempty"`
	Orders                   []*Order           `protobuf:"bytes,5,rep,name=orders,proto3" json:"orders,omitempty"`
	LastOrderPullDate        int64              `protobuf:"varint,7,opt,name=last_order_pull_date,json=lastOrderPullDate,proto3" json:"last_order_pull_date,omitempty"`
	Budgets                  []*Budget          `protobuf:"bytes,8,rep,name=budgets,proto3" json:"budgets,omitempty"`
	Tracking                 int32              `protobuf:"varint,9,opt,name=tracking,proto3" json:"tracking,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetLastRecordcollectionPull() int64 {
	if x != nil {
		return x.LastRecordcollectionPull
	}
	return 0
}

func (x *Config) GetPurchases() []*BoughtRecord {
	if x != nil {
		return x.Purchases
	}
	return nil
}

func (x *Config) GetPrePurchases() []*PreBoughtRecord {
	if x != nil {
		return x.PrePurchases
	}
	return nil
}

func (x *Config) GetSolds() []*SoldRecord {
	if x != nil {
		return x.Solds
	}
	return nil
}

func (x *Config) GetLastOrderPull() int32 {
	if x != nil {
		return x.LastOrderPull
	}
	return 0
}

func (x *Config) GetRotateOrderPull() int32 {
	if x != nil {
		return x.RotateOrderPull
	}
	return 0
}

func (x *Config) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *Config) GetLastOrderPullDate() int64 {
	if x != nil {
		return x.LastOrderPullDate
	}
	return 0
}

func (x *Config) GetBudgets() []*Budget {
	if x != nil {
		return x.Budgets
	}
	return nil
}

func (x *Config) GetTracking() int32 {
	if x != nil {
		return x.Tracking
	}
	return 0
}

type Budget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type      BudgetType      `protobuf:"varint,2,opt,name=type,proto3,enum=recordbudget.BudgetType" json:"type,omitempty"`
	Seeds     map[int64]int32 `protobuf:"bytes,3,rep,name=seeds,proto3" json:"seeds,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Spends    map[int32]int32 `protobuf:"bytes,4,rep,name=spends,proto3" json:"spends,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Remaining int32           `protobuf:"varint,5,opt,name=remaining,proto3" json:"remaining,omitempty"`
	SaleFed   bool            `protobuf:"varint,6,opt,name=sale_fed,json=saleFed,proto3" json:"sale_fed,omitempty"`
	Solds     int32           `protobuf:"varint,7,opt,name=solds,proto3" json:"solds,omitempty"`
	Start     int64           `protobuf:"varint,8,opt,name=start,proto3" json:"start,omitempty"`
	End       int64           `protobuf:"varint,9,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Budget) Reset() {
	*x = Budget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Budget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Budget) ProtoMessage() {}

func (x *Budget) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Budget.ProtoReflect.Descriptor instead.
func (*Budget) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{1}
}

func (x *Budget) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Budget) GetType() BudgetType {
	if x != nil {
		return x.Type
	}
	return BudgetType_YEARLY
}

func (x *Budget) GetSeeds() map[int64]int32 {
	if x != nil {
		return x.Seeds
	}
	return nil
}

func (x *Budget) GetSpends() map[int32]int32 {
	if x != nil {
		return x.Spends
	}
	return nil
}

func (x *Budget) GetRemaining() int32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *Budget) GetSaleFed() bool {
	if x != nil {
		return x.SaleFed
	}
	return false
}

func (x *Budget) GetSolds() int32 {
	if x != nil {
		return x.Solds
	}
	return 0
}

func (x *Budget) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Budget) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ListingId int64  `protobuf:"varint,2,opt,name=listing_id,json=listingId,proto3" json:"listing_id,omitempty"`
	SaleDate  int64  `protobuf:"varint,3,opt,name=sale_date,json=saleDate,proto3" json:"sale_date,omitempty"`
	SalePrice int32  `protobuf:"varint,4,opt,name=sale_price,json=salePrice,proto3" json:"sale_price,omitempty"`
	Cancelled bool   `protobuf:"varint,5,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{2}
}

func (x *Order) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Order) GetListingId() int64 {
	if x != nil {
		return x.ListingId
	}
	return 0
}

func (x *Order) GetSaleDate() int64 {
	if x != nil {
		return x.SaleDate
	}
	return 0
}

func (x *Order) GetSalePrice() int32 {
	if x != nil {
		return x.SalePrice
	}
	return 0
}

func (x *Order) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

type BoughtRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int32  `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Cost       int32  `protobuf:"varint,2,opt,name=cost,proto3" json:"cost,omitempty"`
	BoughtDate int64  `protobuf:"varint,3,opt,name=bought_date,json=boughtDate,proto3" json:"bought_date,omitempty"`
	Budget     string `protobuf:"bytes,4,opt,name=budget,proto3" json:"budget,omitempty"`
}

func (x *BoughtRecord) Reset() {
	*x = BoughtRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoughtRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoughtRecord) ProtoMessage() {}

func (x *BoughtRecord) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoughtRecord.ProtoReflect.Descriptor instead.
func (*BoughtRecord) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{3}
}

func (x *BoughtRecord) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *BoughtRecord) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *BoughtRecord) GetBoughtDate() int64 {
	if x != nil {
		return x.BoughtDate
	}
	return 0
}

func (x *BoughtRecord) GetBudget() string {
	if x != nil {
		return x.Budget
	}
	return ""
}

type PreBoughtRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cost int32 `protobuf:"varint,2,opt,name=cost,proto3" json:"cost,omitempty"`
}

func (x *PreBoughtRecord) Reset() {
	*x = PreBoughtRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreBoughtRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreBoughtRecord) ProtoMessage() {}

func (x *PreBoughtRecord) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreBoughtRecord.ProtoReflect.Descriptor instead.
func (*PreBoughtRecord) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{4}
}

func (x *PreBoughtRecord) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PreBoughtRecord) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

type SoldRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int32 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Price      int32 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	SoldDate   int64 `protobuf:"varint,3,opt,name=sold_date,json=soldDate,proto3" json:"sold_date,omitempty"`
}

func (x *SoldRecord) Reset() {
	*x = SoldRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoldRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoldRecord) ProtoMessage() {}

func (x *SoldRecord) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoldRecord.ProtoReflect.Descriptor instead.
func (*SoldRecord) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{5}
}

func (x *SoldRecord) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *SoldRecord) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SoldRecord) GetSoldDate() int64 {
	if x != nil {
		return x.SoldDate
	}
	return 0
}

type GetBudgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year   int32  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Budget string `protobuf:"bytes,2,opt,name=budget,proto3" json:"budget,omitempty"`
}

func (x *GetBudgetRequest) Reset() {
	*x = GetBudgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBudgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBudgetRequest) ProtoMessage() {}

func (x *GetBudgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBudgetRequest.ProtoReflect.Descriptor instead.
func (*GetBudgetRequest) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{6}
}

func (x *GetBudgetRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetBudgetRequest) GetBudget() string {
	if x != nil {
		return x.Budget
	}
	return ""
}

type Records struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*BoughtRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *Records) Reset() {
	*x = Records{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Records) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Records) ProtoMessage() {}

func (x *Records) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Records.ProtoReflect.Descriptor instead.
func (*Records) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{7}
}

func (x *Records) GetRecords() []*BoughtRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type GetBudgetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spends          int32               `protobuf:"varint,1,opt,name=spends,proto3" json:"spends,omitempty"`
	PreSpends       int32               `protobuf:"varint,5,opt,name=pre_spends,json=preSpends,proto3" json:"pre_spends,omitempty"`
	Solds           int32               `protobuf:"varint,6,opt,name=solds,proto3" json:"solds,omitempty"`
	Budget          int32               `protobuf:"varint,2,opt,name=budget,proto3" json:"budget,omitempty"`
	PurchasedIds    []int32             `protobuf:"varint,3,rep,packed,name=purchased_ids,json=purchasedIds,proto3" json:"purchased_ids,omitempty"`
	PrePurchasedIds []int32             `protobuf:"varint,4,rep,packed,name=pre_purchased_ids,json=prePurchasedIds,proto3" json:"pre_purchased_ids,omitempty"`
	BudgetState     map[string]*Records `protobuf:"bytes,7,rep,name=budget_state,json=budgetState,proto3" json:"budget_state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChosenBudget    *Budget             `protobuf:"bytes,8,opt,name=chosen_budget,json=chosenBudget,proto3" json:"chosen_budget,omitempty"`
}

func (x *GetBudgetResponse) Reset() {
	*x = GetBudgetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBudgetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBudgetResponse) ProtoMessage() {}

func (x *GetBudgetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBudgetResponse.ProtoReflect.Descriptor instead.
func (*GetBudgetResponse) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{8}
}

func (x *GetBudgetResponse) GetSpends() int32 {
	if x != nil {
		return x.Spends
	}
	return 0
}

func (x *GetBudgetResponse) GetPreSpends() int32 {
	if x != nil {
		return x.PreSpends
	}
	return 0
}

func (x *GetBudgetResponse) GetSolds() int32 {
	if x != nil {
		return x.Solds
	}
	return 0
}

func (x *GetBudgetResponse) GetBudget() int32 {
	if x != nil {
		return x.Budget
	}
	return 0
}

func (x *GetBudgetResponse) GetPurchasedIds() []int32 {
	if x != nil {
		return x.PurchasedIds
	}
	return nil
}

func (x *GetBudgetResponse) GetPrePurchasedIds() []int32 {
	if x != nil {
		return x.PrePurchasedIds
	}
	return nil
}

func (x *GetBudgetResponse) GetBudgetState() map[string]*Records {
	if x != nil {
		return x.BudgetState
	}
	return nil
}

func (x *GetBudgetResponse) GetChosenBudget() *Budget {
	if x != nil {
		return x.ChosenBudget
	}
	return nil
}

type GetSoldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId int32 `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *GetSoldRequest) Reset() {
	*x = GetSoldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSoldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSoldRequest) ProtoMessage() {}

func (x *GetSoldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSoldRequest.ProtoReflect.Descriptor instead.
func (*GetSoldRequest) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{9}
}

func (x *GetSoldRequest) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type GetSoldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *SoldRecord `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *GetSoldResponse) Reset() {
	*x = GetSoldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSoldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSoldResponse) ProtoMessage() {}

func (x *GetSoldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSoldResponse.ProtoReflect.Descriptor instead.
func (*GetSoldResponse) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{10}
}

func (x *GetSoldResponse) GetRecord() *SoldRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

type AddBudgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    BudgetType `protobuf:"varint,2,opt,name=type,proto3,enum=recordbudget.BudgetType" json:"type,omitempty"`
	SaleFed bool       `protobuf:"varint,3,opt,name=sale_fed,json=saleFed,proto3" json:"sale_fed,omitempty"`
	Start   int64      `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	End     int64      `protobuf:"varint,5,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *AddBudgetRequest) Reset() {
	*x = AddBudgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBudgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBudgetRequest) ProtoMessage() {}

func (x *AddBudgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBudgetRequest.ProtoReflect.Descriptor instead.
func (*AddBudgetRequest) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{11}
}

func (x *AddBudgetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddBudgetRequest) GetType() BudgetType {
	if x != nil {
		return x.Type
	}
	return BudgetType_YEARLY
}

func (x *AddBudgetRequest) GetSaleFed() bool {
	if x != nil {
		return x.SaleFed
	}
	return false
}

func (x *AddBudgetRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *AddBudgetRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type AddBudgetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBudgetResponse) Reset() {
	*x = AddBudgetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBudgetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBudgetResponse) ProtoMessage() {}

func (x *AddBudgetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBudgetResponse.ProtoReflect.Descriptor instead.
func (*AddBudgetResponse) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{12}
}

type SeedBudgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Amount    int32  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SeedBudgetRequest) Reset() {
	*x = SeedBudgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeedBudgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedBudgetRequest) ProtoMessage() {}

func (x *SeedBudgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedBudgetRequest.ProtoReflect.Descriptor instead.
func (*SeedBudgetRequest) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{13}
}

func (x *SeedBudgetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SeedBudgetRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SeedBudgetRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type SeedBudgetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SeedBudgetResponse) Reset() {
	*x = SeedBudgetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordbudget_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeedBudgetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeedBudgetResponse) ProtoMessage() {}

func (x *SeedBudgetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordbudget_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeedBudgetResponse.ProtoReflect.Descriptor instead.
func (*SeedBudgetResponse) Descriptor() ([]byte, []int) {
	return file_recordbudget_proto_rawDescGZIP(), []int{14}
}

var File_recordbudget_proto protoreflect.FileDescriptor

var file_recordbudget_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x22, 0xf2, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a,
	0x1a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x42, 0x6f,
	0x75, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x09, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x5f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x42,
	0x6f, 0x75, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0c, 0x70, 0x72, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x6f, 0x6c,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x05, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x75, 0x6c,
	0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x12, 0x2b, 0x0a,
	0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x62,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x42, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x52, 0x07, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0xa7, 0x03, 0x0a, 0x06, 0x42, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x65, 0x65, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x65, 0x65, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x2e, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x66, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x61, 0x6c, 0x65, 0x46, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x6f, 0x6c, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x1a, 0x38, 0x0a, 0x0a,
	0x53, 0x65, 0x65, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x9b, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x22,
	0x7c, 0x0a, 0x0c, 0x42, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x6f, 0x75, 0x67, 0x68,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x22, 0x35, 0x0a,
	0x0f, 0x50, 0x72, 0x65, 0x42, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x0a, 0x53, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x6c,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x6f,
	0x6c, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x22, 0x3f, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x2e, 0x42, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xb0, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x53, 0x70,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x5f, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64,
	0x49, 0x64, 0x73, 0x12, 0x53, 0x0a, 0x0c, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x62, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x68, 0x6f, 0x73,
	0x65, 0x6e, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x0c, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x1a, 0x55, 0x0a, 0x10, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x31, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x53, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e,
	0x53, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x61, 0x6c,
	0x65, 0x5f, 0x66, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x61, 0x6c,
	0x65, 0x46, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x13, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5d, 0x0a, 0x11, 0x53, 0x65, 0x65, 0x64, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x65, 0x64, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x35, 0x0a, 0x0a, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x45, 0x41, 0x52, 0x4c, 0x59, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x51, 0x55, 0x41, 0x52, 0x54, 0x45, 0x52, 0x4c, 0x59, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x45, 0x10, 0x03, 0x32, 0xd2, 0x02,
	0x0a, 0x13, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x42, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x53, 0x65, 0x65, 0x64, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53,
	0x6f, 0x6c, 0x64, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recordbudget_proto_rawDescOnce sync.Once
	file_recordbudget_proto_rawDescData = file_recordbudget_proto_rawDesc
)

func file_recordbudget_proto_rawDescGZIP() []byte {
	file_recordbudget_proto_rawDescOnce.Do(func() {
		file_recordbudget_proto_rawDescData = protoimpl.X.CompressGZIP(file_recordbudget_proto_rawDescData)
	})
	return file_recordbudget_proto_rawDescData
}

var file_recordbudget_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_recordbudget_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_recordbudget_proto_goTypes = []interface{}{
	(BudgetType)(0),            // 0: recordbudget.BudgetType
	(*Config)(nil),             // 1: recordbudget.Config
	(*Budget)(nil),             // 2: recordbudget.Budget
	(*Order)(nil),              // 3: recordbudget.Order
	(*BoughtRecord)(nil),       // 4: recordbudget.BoughtRecord
	(*PreBoughtRecord)(nil),    // 5: recordbudget.PreBoughtRecord
	(*SoldRecord)(nil),         // 6: recordbudget.SoldRecord
	(*GetBudgetRequest)(nil),   // 7: recordbudget.GetBudgetRequest
	(*Records)(nil),            // 8: recordbudget.Records
	(*GetBudgetResponse)(nil),  // 9: recordbudget.GetBudgetResponse
	(*GetSoldRequest)(nil),     // 10: recordbudget.GetSoldRequest
	(*GetSoldResponse)(nil),    // 11: recordbudget.GetSoldResponse
	(*AddBudgetRequest)(nil),   // 12: recordbudget.AddBudgetRequest
	(*AddBudgetResponse)(nil),  // 13: recordbudget.AddBudgetResponse
	(*SeedBudgetRequest)(nil),  // 14: recordbudget.SeedBudgetRequest
	(*SeedBudgetResponse)(nil), // 15: recordbudget.SeedBudgetResponse
	nil,                        // 16: recordbudget.Budget.SeedsEntry
	nil,                        // 17: recordbudget.Budget.SpendsEntry
	nil,                        // 18: recordbudget.GetBudgetResponse.BudgetStateEntry
}
var file_recordbudget_proto_depIdxs = []int32{
	4,  // 0: recordbudget.Config.purchases:type_name -> recordbudget.BoughtRecord
	5,  // 1: recordbudget.Config.pre_purchases:type_name -> recordbudget.PreBoughtRecord
	6,  // 2: recordbudget.Config.solds:type_name -> recordbudget.SoldRecord
	3,  // 3: recordbudget.Config.orders:type_name -> recordbudget.Order
	2,  // 4: recordbudget.Config.budgets:type_name -> recordbudget.Budget
	0,  // 5: recordbudget.Budget.type:type_name -> recordbudget.BudgetType
	16, // 6: recordbudget.Budget.seeds:type_name -> recordbudget.Budget.SeedsEntry
	17, // 7: recordbudget.Budget.spends:type_name -> recordbudget.Budget.SpendsEntry
	4,  // 8: recordbudget.Records.records:type_name -> recordbudget.BoughtRecord
	18, // 9: recordbudget.GetBudgetResponse.budget_state:type_name -> recordbudget.GetBudgetResponse.BudgetStateEntry
	2,  // 10: recordbudget.GetBudgetResponse.chosen_budget:type_name -> recordbudget.Budget
	6,  // 11: recordbudget.GetSoldResponse.record:type_name -> recordbudget.SoldRecord
	0,  // 12: recordbudget.AddBudgetRequest.type:type_name -> recordbudget.BudgetType
	8,  // 13: recordbudget.GetBudgetResponse.BudgetStateEntry.value:type_name -> recordbudget.Records
	12, // 14: recordbudget.RecordBudgetService.AddBudget:input_type -> recordbudget.AddBudgetRequest
	14, // 15: recordbudget.RecordBudgetService.SeedBudget:input_type -> recordbudget.SeedBudgetRequest
	7,  // 16: recordbudget.RecordBudgetService.GetBudget:input_type -> recordbudget.GetBudgetRequest
	10, // 17: recordbudget.RecordBudgetService.GetSold:input_type -> recordbudget.GetSoldRequest
	13, // 18: recordbudget.RecordBudgetService.AddBudget:output_type -> recordbudget.AddBudgetResponse
	15, // 19: recordbudget.RecordBudgetService.SeedBudget:output_type -> recordbudget.SeedBudgetResponse
	9,  // 20: recordbudget.RecordBudgetService.GetBudget:output_type -> recordbudget.GetBudgetResponse
	11, // 21: recordbudget.RecordBudgetService.GetSold:output_type -> recordbudget.GetSoldResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_recordbudget_proto_init() }
func file_recordbudget_proto_init() {
	if File_recordbudget_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recordbudget_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Budget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoughtRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreBoughtRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoldRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBudgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Records); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBudgetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSoldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSoldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBudgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBudgetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeedBudgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordbudget_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeedBudgetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recordbudget_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recordbudget_proto_goTypes,
		DependencyIndexes: file_recordbudget_proto_depIdxs,
		EnumInfos:         file_recordbudget_proto_enumTypes,
		MessageInfos:      file_recordbudget_proto_msgTypes,
	}.Build()
	File_recordbudget_proto = out.File
	file_recordbudget_proto_rawDesc = nil
	file_recordbudget_proto_goTypes = nil
	file_recordbudget_proto_depIdxs = nil
}
